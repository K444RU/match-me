/**
 * Generated by orval v7.8.0 🍺
 * Do not edit manually.
 * Blind API
 * kood/Jõhvi match-me task API
 * OpenAPI spec version: v0.0.1
 */
import { customInstance } from '../lib/custom-axios-instance';
import type {
  AccountSettingsRequestDTO,
  AttributesSettingsRequestDTO,
  BatchUserResponseDTO,
  BiographicalResponseDTO,
  CurrentUserResponseDTO,
  PreferencesSettingsRequestDTO,
  ProfilePictureSettingsRequestDTO,
  ProfileResponseDTO,
  ProfileSettingsRequestDTO,
  UserParametersRequestDTO,
  VerifyAccountParams,
} from './types';

export const getUserController = () => {
  const updateProfile = (profileSettingsRequestDTO: ProfileSettingsRequestDTO) => {
    return customInstance<void>({
      url: `http://localhost:8000/api/users/settings/profile`,
      method: 'PUT',
      headers: { 'Content-Type': 'application/json' },
      data: profileSettingsRequestDTO,
    });
  };
  const updatePreferences = (preferencesSettingsRequestDTO: PreferencesSettingsRequestDTO) => {
    return customInstance<void>({
      url: `http://localhost:8000/api/users/settings/preferences`,
      method: 'PUT',
      headers: { 'Content-Type': 'application/json' },
      data: preferencesSettingsRequestDTO,
    });
  };
  const updateAttributes = (attributesSettingsRequestDTO: AttributesSettingsRequestDTO) => {
    return customInstance<void>({
      url: `http://localhost:8000/api/users/settings/attributes`,
      method: 'PUT',
      headers: { 'Content-Type': 'application/json' },
      data: attributesSettingsRequestDTO,
    });
  };
  const updateAccount = (accountSettingsRequestDTO: AccountSettingsRequestDTO) => {
    return customInstance<void>({
      url: `http://localhost:8000/api/users/settings/account`,
      method: 'PUT',
      headers: { 'Content-Type': 'application/json' },
      data: accountSettingsRequestDTO,
    });
  };
  const uploadProfilePicture = (profilePictureSettingsRequestDTO: ProfilePictureSettingsRequestDTO) => {
    return customInstance<void>({
      url: `http://localhost:8000/api/users/profile-picture`,
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      data: profilePictureSettingsRequestDTO,
    });
  };
  const getUsersBatch = (getUsersBatchBody: number[]) => {
    return customInstance<BatchUserResponseDTO>({
      url: `http://localhost:8000/api/users/batch`,
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      data: getUsersBatchBody,
    });
  };
  const verifyAccount = (userId: number, params: VerifyAccountParams) => {
    return customInstance<void>({ url: `http://localhost:8000/api/users/verify/${userId}`, method: 'PATCH', params });
  };
  const setParameters = (userParametersRequestDTO: UserParametersRequestDTO) => {
    return customInstance<void>({
      url: `http://localhost:8000/api/users/complete-registration`,
      method: 'PATCH',
      headers: { 'Content-Type': 'application/json' },
      data: userParametersRequestDTO,
    });
  };
  const getUser = (targetId: number) => {
    return customInstance<CurrentUserResponseDTO>({
      url: `http://localhost:8000/api/users/${targetId}`,
      method: 'GET',
    });
  };
  const getProfile = (targetId: number) => {
    return customInstance<ProfileResponseDTO>({
      url: `http://localhost:8000/api/users/${targetId}/profile`,
      method: 'GET',
    });
  };
  const getBio = (targetId: number) => {
    return customInstance<BiographicalResponseDTO>({
      url: `http://localhost:8000/api/users/${targetId}/bio`,
      method: 'GET',
    });
  };
  return {
    updateProfile,
    updatePreferences,
    updateAttributes,
    updateAccount,
    uploadProfilePicture,
    getUsersBatch,
    verifyAccount,
    setParameters,
    getUser,
    getProfile,
    getBio,
  };
};
export type UpdateProfileResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getUserController>['updateProfile']>>
>;
export type UpdatePreferencesResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getUserController>['updatePreferences']>>
>;
export type UpdateAttributesResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getUserController>['updateAttributes']>>
>;
export type UpdateAccountResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getUserController>['updateAccount']>>
>;
export type UploadProfilePictureResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getUserController>['uploadProfilePicture']>>
>;
export type GetUsersBatchResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getUserController>['getUsersBatch']>>
>;
export type VerifyAccountResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getUserController>['verifyAccount']>>
>;
export type SetParametersResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getUserController>['setParameters']>>
>;
export type GetUserResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUserController>['getUser']>>>;
export type GetProfileResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUserController>['getProfile']>>>;
export type GetBioResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUserController>['getBio']>>>;
