services:
  # =============== POSTGRES DATABASE ===============
  db:
    image: postgres:15-alpine
    container_name: matchme-db
    env_file:
      - .env    # Contains POSTGRES_USER, POSTGRES_PASSWORD, POSTGRES_DB, etc.
    ports:
      - "5432:5432"
    networks:
      - backend-network

  # =============== BACK-END (Spring Boot) ===============
  backend:
    build:
      context: ./back-end
      dockerfile: Dockerfile
    container_name: matchme-backend
    env_file:
      - .env
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/match
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}

      # For your "application.properties" usage:
      - SPRING_PROFILES_ACTIVE=prod  # optional, if you have a "prod" profile
    ports:
      - "8000:8000"
    depends_on:
      - db
    networks:
      - backend-network

  # =============== FRONT-END (React) ===============
  frontend:
    build:
      context: ./front-end
      dockerfile: Dockerfile
      args:
        VITE_GEOAPI_BASE_URL: ${VITE_GEOAPI_BASE_URL}
        VITE_GEOAPI_KEY: ${VITE_GEOAPI_KEY}
        VITE_MAX_AVATAR_SIZE_MB: ${VITE_MAX_AVATAR_SIZE_MB}
        VITE_API_BASE_URL: ${VITE_API_BASE_URL}
        VITE_WS_URL: ${VITE_WS_URL}
    container_name: matchme-frontend
    env_file:
      - .env
    volumes:
      - frontend_dist:/usr/share/nginx/html # Mount built assets into the volume
    depends_on:
      - backend
    networks:
      - frontend-network

  # =============== NGINX PROXY ===============
  proxy:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: matchme-proxy
    volumes:
      - frontend_dist:/usr/share/nginx/html:ro # Mount built assets read-only
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend
    networks:
      - backend-network
      - frontend-network

volumes:
  frontend_dist:

networks:
  frontend-network:
    driver: bridge
  backend-network:
    driver: bridge